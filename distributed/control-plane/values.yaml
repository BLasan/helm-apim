# -------------------------------------------------------------------------------------
#
# Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com). All Rights Reserved.
#
# This software is the property of WSO2 LLC. and its suppliers, if any.
# Dissemination of any information or reproduction of any material contained 
# herein is strictly forbidden, unless permitted by WSO2 in accordance with the 
# WSO2 Commercial License available at https://wso2.com/licenses/eula/3.2
#
# --------------------------------------------------------------------------------------
aws:
  # -- If AWS is used as the cloud provider
  enabled: true
  # -- AWS region
  region: ""
  # Persistent storage configuration parameters
  efs:
    # -- EFS capacity
    capacity: ""
    # -- EFS directory permissions
    directoryPerms: ""
    # -- EFS file system ID for mounting the persistent volume
    fileSystemId: ""
    # EFS Access Points for static provisioning
    accessPoints:
      # -- EFS Access Point ID for mounting carbonDB 1
      carbonDb1: ""
      # -- EFS Access Point ID for mounting solr 1
      solr1: ""
      # -- EFS Access Point ID for mounting carbonDB 2
      carbonDb2: ""
      # -- EFS Access Point ID for mounting solr 1
      solr2: ""
  # Secret manager configuration parameters
  secretsManager:
    # -- AWS Secrets Manager secret provider class name
    secretProviderClass: ""
    secretIdentifiers:
      # Internal keystore password identifier in secrets manager
      internalKeystorePassword:
        # -- AWS Secrets Manager secret name
        secretName: ""
        # -- AWS Secrets Manager secret key
        secretKey: ""
    # -- Name of Kubernetes service account to read secrets
    serviceAccountName: ""

azure:
  # -- If Azure is used as the cloud provider
  enabled: false
  keyVault:
    # -- Azure Key vault used for credential management
    name: ""
    # -- Azure Key vault secret provider class name
    secretProviderClass: ""
    secretIdentifiers:
      # -- Internal keystore password identifier in keyvault
      internalKeystorePasswordID: ""
    activeDirectory:
      # Service Principal created for transacting with the target Azure Key Vault
      # For advanced details refer to official documentation (https://github.com/Azure/secrets-store-csi-driver-provider-azure/blob/master/docs/service-principal-mode.md)
      servicePrincipal:
        # -- Application ID of the service principal used in secret-store-csi
        clientID: ""
        # -- Client secret name of the service principal used in secret-store-csi
        clientSecret: ""
      # -- Azure Active Directory tenant ID of the target Key Vault
      tenantId: ""
    resourceManager:
      # -- Subscription ID of the target Azure Key Vault
      subscriptionId: ""
      # -- Name of the Azure Resource Group to which the target Azure Key Vault belongs
      resourceGroup: ""
  # Needed for persisting indexing related data
  persistence:
    # -- Persistent volume capacity
    capacity: ""
    # -- Persistent volume storage class
    storageClass: ""
    # -- Persistent volume storage account type
    storageAccountType: ""
    # -- Azure file secret name
    secretName: ""
    fileShares:
      # -- Azure fileshare share name for carbonDB for instance 1
      carbondb1: ""
      # -- Azure fileshare share name for carbonDB for instance 2
      carbondb2: ""
      # -- Azure fileshare share name for solr for instance 1
      solr1: ""
      # -- Azure fileshare share name for solr for instance 2
      solr2: ""
      
# Google Cloud Platform (GCP) integration status
gcp:
  # -- If GCP is used as the cloud provider
  enabled: true
  # File Store configuration parameters
  fs:
    # -- Storage capacity of the file system (in GB or other appropriate units)
    capacity: "1Ti"
    # FileStore configuration for specific services
    fileshares:
      # FileShare configs for CarbonDB persistent storage for instance 1
      carbonDB1:
        # -- FileStore of the CarbonDB persistent storage for instance 1
        fileStoreName: ""
        # -- FileShare of the CarbonDB persistent storage for instance 1
        fileShareName: ""
        # -- IP of the CarbonDB persistent storage for instance 1
        ip: ""
      # FileShare configs for Solr persistent storage for instance 1
      solr1:
        # -- FileStore of the Solr persistent storage for instance 1
        fileStoreName: ""
        # -- FileShare of the Solr persistent storage for instance 1
        fileShareName: ""
        # -- IP of the Solr persistent storage for instance 1
        ip: ""
      # FileShare configs for CarbonDB2 persistent storage for instance 2
      carbonDB2:
        # -- FileStore of the CarbonDB persistent storage for instance 2
        fileStoreName: ""
        # -- FileShare of the CarbonDB persistent storage for instance 2
        fileShareName: ""
        # -- IP of the CarbonDB persistent storage for instance 2
        ip: ""
      # FileShare configs for Solr persistent storage for instance 2
      solr2:
        # -- FileStore of the Solr persistent storage for instance 2
        fileStoreName: ""
        # -- FileShare of the Solr persistent storage for instance 2
        fileShareName: ""
        # -- IP of the Solr persistent storage for instance 2
        ip: ""
    # -- Tier of the FileStore
    tier: ""
    # -- Network of the FileStore
    network: ""
    # -- Region of the FileStore
    location: ""
  # Secrets Manager configuration parameters
  secretsManager:
    # -- Project ID
    projectId: ""
    # -- Secret provider class
    secretProviderClass: ""
    secret:
      # -- Name of the secret
      secretName: ""
      # -- Version of the secret 
      secretVersion: ""
    # -- Service Account with access to read secrets
    serviceAccountName: ""

kubernetes:
  ingress:
    # -- Ingress class used for exposing the API Manager Gateway
    ingressClass: "nginx"
    # -- Kubernetes secret created for Ingress TLS
    tlsSecret: "nginx-tls"
    ratelimit:
      # -- Enable Ingress rate limit
      enabled: false
      # -- Ingress ratelimit zone name
      zoneName: ""
      # -- Ingress ratelimit burst limit
      burstLimit: ""
    controlPlane:
      # -- Ingress hostname for publisher, devportal, admin, and carbon console
      hostname: "am.wso2.com"
      # -- Ingress annotations for control-plane
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        nginx.ingress.kubernetes.io/affinity: "cookie"
        nginx.ingress.kubernetes.io/session-cookie-name: "route"
        nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
        nginx.ingress.kubernetes.io/proxy-buffering: "on"
        nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"

  securityContext:
    # -- User ID of the container
    runAsUser: "802"

wso2:
  apim:
    configurations:

      # -- Admin username of the API Manager
      adminUsername: "admin"
      # -- Admin password of the API Manager
      adminPassword: "admin"

      # APIM cache related configurations
      cache:
        gatewayToken:
          # -- Gateway token cache enabled
          enabled: true
          # -- Gateway token cache expiration time
          expiryTime: "15m"
        resource:
          # -- Gateway resource cache enabled
          enabled: true
          # -- Gateway resource cache expiration time
          expiryTime: "900s"
        kmToken:
          # -- Gateway KM token cache enabled
          enabled: true
          # -- Gateway KM token cache expiration time
          expiryTime: "15m"
        recentApis:
          # -- Gateway recent APIs cache enabled
          enabled: false
        scopes:
          enabled: false
        publisherRoles:
          enabled: false
        jwtClaim:
          # -- Gateway JWT claim cache enabled
          enabled: true
          # -- Gateway JWT claim cache expiration time
          expiryTime: "15m"
        tags:
          # -- Gateway tags cache enabled
          enabled: true
          expiryTime: "2m"

      # APIM CORS configurations
      cors:
        # -- CORS configuration enabled
        enabled: true
        # -- CORS Access-Control-Allow-Origin
        allowOrigins: ["*"]
        # -- CORS Access-Control-Allow-Methods
        allowMethods: ["GET","PUT","POST","DELETE","PATCH","OPTIONS"]
        # -- CORS Access-Control-Allow-Headers
        allowHeaders: ["authorization","Access-Control-Allow-Origin","Content-Type","SOAPAction","apikey","Internal-Key"]
        # -- CORS Access-Control-Allow-Credentials
        allowCredentials: false
      
      databases:
        # -- Azure database type
        type: "mysql"
        jdbc:
          # -- JDBC driver class name
          driver: "com.mysql.cj.jdbc.Driver"
        apimDB:
          # -- AM database URL
          url: "jdbc:mysql://localhost:3306/apim_db?useSSL=false"
          # -- AM database username
          username: "wso2carbon"
          # -- AM database password
          password: "wso2carbon"
          # -- JDBC pool parameters for AM database
          poolParameters:
            validationQuery: "SELECT 1"
            testOnBorrow: true
            removeAbandoned: true
            removeAbandonedTimeout: 300
            indexingFrequencyInSeconds: 10
        sharedDB:
          # -- Shared database URL
          url: "jdbc:mysql://localhost:3306/shared_db?useSSL=false"
          # -- Shared database username
          username: "wso2carbon"
          # -- Shared database password
          password: "wso2carbon"
          # -- JDBC pool parameters for shared database
          poolParameters:
            validationQuery: "SELECT 1"
            testOnBorrow: true
            removeAbandoned: true
            removeAbandonedTimeout: 300
            indexingFrequencyInSeconds: 10
      
      devportal:
        # -- Enable or disable application sharing
        enableApplicationSharing: 
        # -- Type of application sharing
        applicationSharingType: 
        # -- Implementation details for application sharing
        applicationSharingImpl: 
        # -- Display multiple versions of the same API or only show the latest version
        displayMultipleVersions: 
        # -- Display deprecated APIs in the portal
        displayDeprecatedApis: 
        # -- Enable or disable comments for the API
        enableComments: 
        # -- Enable or disable ratings for the API
        enableRatings: 
        # -- Enable or disable the forum for the API
        enableForum: 
        # -- Enable or disable anonymous mode
        enableAnonymousMode: 
        # -- Enable or disable subscriptions across tenants
        enableCrossTenantSubscriptions: 
        # -- Create a default application for new users
        create_default_application: 
        # -- Specify whether the username is case-insensitive during login
        loginUsernameCaseInsensitive:
        # -- Enable or disable key provisioning
        enableKeyProvisioning:

      eventHandlers:
        - name: userPostSelfRegistration
          subscriptions:
            - POST_ADD_USER
      
      eventListeners:
        # -- Token revocation event listener configuration
        - id: "token_revocation"
          type: "org.wso2.carbon.identity.core.handler.AbstractIdentityHandler"
          name: "org.wso2.is.notification.ApimOauthEventInterceptor"
          order: 1
          properties:
            # -- Notification endpoint for token revocation event
            notificationEndpoint: "https://localhost:${mgt.transport.https.port}/internal/data/v1/notify"


      gateway:
        # -- Gateway environments
        environments:
          # -- Gateway name
        - name: "default"
          # -- Gateway type
          type: "hybrid"
          # -- Display in the API console
          displayInApiConsole: true
          # -- Description
          description: "This is the internal gateway environment"
          # -- Show as Token Endpoint URL
          showAsTokenEndpointUrl: true
          # -- Service name for the gateway
          serviceName: "apim-am-all-in-one-am-service"
          # -- Service port for the gateway
          servicePort: 9443
          # -- Hostname for Websocket requests
          wsHostname: "websocket.wso2.com"
          # -- Hostname for HTTP requests
          httpHostname: "gw.wso2.com"
      
      # Identity Provider (IdP) configurations
      idp:
        # -- Enable or disable Identity Provider functionality (true/false)
        enabled: true
        # -- URL of the Identity Provider server
        serverUrl: "https://am.wso2.com"
        # -- Authorization endpoint for OAuth 2.0
        authorizeEndpoint: "https://am.wso2.com/oauth2/authorize"
        # -- OpenID Connect (OIDC) configuration
        oidc:
            # -- Logout endpoint for OIDC
            logoutEndpoint: "https://am.wso2.com/oidc/logout"
            # -- Session endpoint for OIDC
            sessionEndpoint: "https://am.wso2.com/oidc/checksession"
      
      iskm:
        # -- Set true ISKM is used instead of Resident KM
        enabled: false
        # -- ISKM kubernetes service name if ISKM is used instead of Resident KM
        serviceName: ""
        # -- ISKM kubernetes service port
        servicePort:

      # APIM log4j configurations
      log4j2:
        # -- Console loggers that can be enabled. Allowed values are AUDIT_LOG_CONSOLE, HTTP_ACCESS_CONSOLE, TRANSACTION_CONSOLE, CORRELATION_CONSOLE
        loggers: "AUDIT_LOG_CONSOLE, HTTP_ACCESS_CONSOLE, TRANSACTION_CONSOLE, CORRELATION_CONSOLE"
        # -- Log4j appender to be enabled
        appenders: ""
      
      # Notification configurations
      notification:
        # -- Sender's email address
        fromAddress: 
        # -- Username for authentication (if applicable)
        username: 
        # -- Password for authentication (if applicable)
        password: 
        # -- Hostname of the mail server
        hostname: 
        # -- Port for mail server communication
        port: 25
        # -- Enable STARTTLS for secure communication (true/false)
        enableStartTls: false
        # -- Enable authentication for the mail server (true/false)
        enableAuthentication: false
      
      oauth:
        # -- Token cleanup configuration
        tokenCleanup:
            # -- Enable or disable OAuth token cleanup (true/false)
            enable: false
      # -- OAuth configuration
      oauthConfig:
        # -- Enable or disable OAuth functionality (true/false)
        enabled: false
        # -- OAuth2 token revocation endpoint URL
        revokeEndpoint:
        # -- Enable outbound authentication header for OAuth
        enableOutboundAuthHeader:
        # -- Authentication header configuration
        authHeader:
        # -- Enable token encryption for OAuth
        enableTokenEncryption:
        # -- Enable token hashing for OAuth
        enableTokenHashing:
      
      resourceAccessControl:
        - context: "(.*)/fileupload/resource(.*)"
          secure: false
          httpMethod: "all"
          permissions:
        - context: "(.*)/fileupload/(.*)"
          secure: true
          httpMethod: "all"
          permissions: ["/permission/protected/"]
        - context: "(.*)/((\\.+)|(.*;+.*)|%2e)/(.*)"
          secure: true
          httpMethod: "all"
          permissions: ["/"]
        - context: "(.*)/fileupload/resource(.*)"
          secure: false
          httpMethod: "all"

      # APIM keystore configurations
      security:
        # -- Kubernetes secret name containing the keystores and truststore
        jksSecretName: ""
        keystores:
          primary:
            # -- Primary keystore enabled
            enabled: true
            # -- Primary keystore name
            name: "primary.jks"
            # -- Primary keystore alias
            alias: "wso2carbon"
            # -- Primary keystore password
            password: "wso2carbon"
            # -- Primary keystore key password
            keyPassword: "wso2carbon"
          tls:
            # -- Secondary keystore enabled
            enabled: true
            # -- Secondary keystore name
            name: "tls.jks"
            # -- Secondary keystore alias
            alias: "wso2carbon"
            # -- Secondary keystore password
            password: "wso2carbon"
            # -- Secondary keystore key password
            keyPassword: "wso2carbon"
          internal:
            # -- Internal keystore enabled
            enabled: true
            # -- Internal keystore name
            name: "internal.jks"
            # -- Internal keystore alias
            alias: "wso2carbon"
            # -- Internal keystore password
            password: "wso2carbon"
            # -- Internal keystore key password
            keyPassword: "wso2carbon"
        truststore:
          # -- Truststore name
          name: "client-truststore.jks"
          # -- Truststore password
          password: "wso2carbon"
      
      serviceProvider:
        spNameRegex: "^[\\sa-zA-Z0-9._-]*$"

      throttling:
        # -- Traffic manager loadbalancer service url for throttling.
        # If the traffic manager is separated from control-plane, all urls should be pointed to traffic-manager ones.
        serviceUrl: "wso2am-tm-service"
        # -- Traffic manager port offset
        portOffset: 0
        # -- Traffic manager service urls. You only need to define one if the TM is not in HA.
        urls:
          - "wso2am-tm-1-service"
          - "wso2am-tm-2-service"
        # -- Enable unlimited throttling tier
        unlimitedTier: true
        # -- Enable header based throttling
        headerBasedThrottling: false
        # -- Enable JWT claim based throttling
        jwtClaimBasedThrottling: false
        # -- Enable query param based throttling
        queryParamBasedThrottling: false
        # -- Blacklist condition configuration
        blacklistCondition:
            # -- Enable or disable blacklist condition (true/false)
            enabled: false
            # -- Start delay for blacklist condition
            startDelay: 
            # -- Period for blacklist condition
            period: 
        # -- JMS throttling configuration
        jms:
            # -- Start delay for JMS throttling
            startDelay: 

      # Transport configurations
      transport:
        receiver:
          # -- Receiver type (e.g., HTTP, HTTPS)
          type: ""
          # -- Number of worker threads
          workerThreads: 10
          # -- Session timeout duration
          sessionTimeout: ""
          # -- Keystore configuration
          keystore:
              # -- Keystore file name reference
              fileName: "$ref{keystore.tls.file_name}"
              # -- Keystore password reference
              password: "$ref{keystore.tls.password}"
          # -- TCP port for communication
          tcpPort: 9611
          # -- SSL port for secure communication
          sslPort: 9711
          # -- Enabled SSL protocols
          sslEnabledProtocols:
              - "TLSv1"
              - "TLSv1.1"
              - "TLSv1.2"
          # -- List of supported ciphers
          ciphers:
              - "SSL_RSA_WITH_RC4_128_MD5"
              - "SSL_RSA_WITH_RC4_128_SHA"

      # APIM user store configurations
      userStore:
        # -- User store type. 
        # https://apim.docs.wso2.com/en/latest/administer/managing-users-and-roles/managing-user-stores/configure-primary-user-store/configuring-the-primary-user-store/
        type: "database_unique_id"
        # -- User store properties
        properties:
          key: value

      # Workflow configurations
      workflow:
        # -- Enable or disable workflow functionality (true/false)
        enabled: false
        # -- URL of the workflow service
        serviceUrl:
        # -- Callback endpoint for workflow
        callbackEndpoint:
        # -- Token endpoint for workflow
        tokenEndpoint:
        # -- Endpoint for client registration in workflow
        clientRegistrationEndpoint:
        # -- Username for client registration in workflow
        clientRegistrationUsername:
        # -- Password for client registration in workflow
        clientRegistrationPassword:

    # -- APIM server port offset
    portOffset: 0
    # -- Enable secure vault
    secureVaultEnabled: false

  deployment:

    am:
      image:
        # -- Registry name consisting the image
        registry: ""
        # -- Repository name consisting the image
        repository: ""
        # -- Docker image digest
        digest: ""
        # -- Image pull policy
        imagePullPolicy: Always

      resources:
        # These are the resource recommendations for running WSO2 API Management product profiles with profile optimization
        # Resource configurations defined here are applicable for all API Manager product profiles of this deployment
        requests:
          # -- Memory request for API Manager
          memory: "1Gi"
          # -- CPU request for API Manager
          cpu: "1000m"
        limits:
          # -- Memory limit for API Manager
          memory: "2Gi"
          # -- CPU limit for API Manager
          cpu: "2000m"
        jvm:
          memory:
            # -- JVM heap memory Xms
            xms: "1024m"
            # -- JVM heap memory Xmx
            xmx: "1024m"

      # -- Minimum available pod counts for PDB
      minAvailable: 1

      # Indicates whether the container is running
      livenessProbe:
        # -- Number of seconds after the container has started before liveness probes are initiated
        initialDelaySeconds: 120
        # -- How often (in seconds) to perform the probe
        periodSeconds: 10
        # -- Minimum consecutive successes for the probe to be considered successful after having failed
        failureThreshold: 3
      # Indicates whether the container is ready to service requests
      readinessProbe:
        # -- Number of seconds after the container has started before readiness probes are initiated
        initialDelaySeconds: 120
        # -- How often (in seconds) to perform the probe
        periodSeconds: 10
        # -- Minimum consecutive successes for the probe to be considered successful after having failed
        failureThreshold: 3

    # -- Enable high availability for control plane. If enabled, two instances of control plane will be deployed
    highAvailability: false
    # Persisted and shared runtime artifacts for API Manager
    persistence:
      # -- Persistent runtime artifacts for Apache Solr-based indexing
      solrIndexing:
        # -- Indicates if persistence of the runtime artifacts for Apache Solr-based indexing is enabled
        # By default, this is disabled
        enabled: false
        # Define capacities for persistent runtime artifact directories
        capacity:
          # -- For persisting the H2 based local Carbon database file
          carbonDatabase: 50M
          # -- For persisting the indexed data
          solrIndexedData: 50M
