# -------------------------------------------------------------------------------------
#
# Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com). All Rights Reserved.
#
# This software is the property of WSO2 LLC. and its suppliers, if any.
# Dissemination of any information or reproduction of any material contained 
# herein is strictly forbidden, unless permitted by WSO2 in accordance with the 
# WSO2 Commercial License available at https://wso2.com/licenses/eula/3.2
#
# --------------------------------------------------------------------------------------

aws:
  # -- If AWS is used as the cloud provider
  enabled: false
  region: "us-west-1"
  efs:
    # -- EFS capacity
    capacity: "1Ti"
    # -- EFS directory permissions
    directoryPerms: "0777"
    # -- EFS file system ID for mounting the persistent volume
    fileSystemId: ""
    # -- EFS Access Points for static provisioning
    accessPoints:
      executionPlans: "fsap-02cc2fe5aca70d172"
  # -- AWS region
  secretsManager:
    # -- AWS Secrets Manager secret provider class name
    secretProviderClass: "wso2am-tm-secret-provider-class"
    secretIdentifiers:
      # -- Internal keystore password identifier in secrets manager
      internalKeystorePassword:
        # -- AWS Secrets Manager secret name
        secretName: ""
        # -- AWS Secrets Manager secret key
        secretKey: "secret"
    # Name of Kubernetes service account
    serviceAccountName: "admin"

azure:
  # -- If Azure is used as the cloud provider
  enabled: false
  keyVault:
    # -- Azure Key vault used for credential management
    name: "wso2am-vault"
    # -- Azure Key vault secret provider class name
    secretProviderClass: "wso2am-tm-secret-provider-class"
    secretIdentifiers:
      # -- Internal keystore password identifier in keyvault
      internalKeystorePasswordID: "wso2am"
    activeDirectory:
      # -- Service Principal created for transacting with the target Azure Key Vault
      # For advanced details refer to official documentation (https://github.com/Azure/secrets-store-csi-driver-provider-azure/blob/master/docs/service-principal-mode.md)
      servicePrincipal:
        # -- Application ID of the service principal used in secret-store-csi
        clientID: ""
        # -- Client secret name of the service principal used in secret-store-csi
        clientSecret: ""
      # -- Azure Active Directory tenant ID of the target Key Vault
      tenantId: ""
    resourceManager:
      # -- Subscription ID of the target Azure Key Vault
      subscriptionId: ""
      # -- Name of the Azure Resource Group to which the target Azure Key Vault belongs
      resourceGroup: ""
  persistence:
    # Needed for persisting indexing related data
    # -- Persistent volume capacity
    capacity: "1Gi"
    # -- Persistent volume storage class
    storageClass: "azurefile"
    # -- Persistent volume storage account type
    storageAccountType: ""
    # -- Azure file secret name
    secretName: "azure-secret"
    # -- Azure fileshare share name
    fileShares:
      executionPlans: "executionplans"

# Google Cloud Platform (GCP) integration status
gcp:
  # -- If GCP is used as the cloud provider
  enabled: true
  # -- File Store configuration parameters
  fs:
    # -- Storage capacity of the file system (in GB or other appropriate units)
    capacity: "1Ti"
    # -- FileStore configuration for specific services
    fileshares:
      # -- FileShare configs for CarbonDB persistent storage for instance 1
      executionPlans:
        # -- FileStore of the CarbonDB persistent storage for instance 1
        fileStoreName: "-dev-executionplans-filestore"
        # -- FileShare of the CarbonDB persistent storage for instance 1
        fileShareName: "executionplans"
        # -- IP of the CarbonDB persistent storage for instance 1
        ip: "10.17.132.226"
    # -- Tier of the FileStore
    tier: "standard"
    # -- Network of the FileStore
    network: "default"
    # -- Region of the FileStore
    location: "us-central1-b"
  
  # -- Secrets Manager configuration parameters
  secretsManager:
    # -- Project ID
    projectId: ""
    # -- Secret provider class
    secretProviderClass: "secret-provider-tm"
    secret:
      # -- Name of the secret
      secretName: "secret"
      # -- Version of the secret 
      secretVersion: "1"
    # -- Service Account with access to read secrets
    serviceAccountName: "admin"

kubernetes:
  securityContext:
    # -- User ID of the container
    runAsUser: "802"

wso2:
  apim:
    configurations:
      # -- Admin username of the API Manager
      adminUsername: "admin"
      # -- Admin password of the API Manager
      adminPassword: "admin"

      databases:
        # -- Azure database type
        type: "mysql"
        jdbc:
          # -- JDBC driver class name
          driver: "com.mysql.cj.jdbc.Driver"
        apimDB:
          # -- AM database URL
          url: "jdbc:mysql://localhost:3306/apim_db?useSSL=false"
          # -- AM database username
          username: "wso2carbon"
          # -- AM database password
          password: "wso2carbon"
          # -- JDBC pool parameters for AM database
          poolParameters:
            validationQuery: "SELECT 1"
            testOnBorrow: true
            removeAbandoned: true
            removeAbandonedTimeout: 300
            indexingFrequencyInSeconds: 10
        sharedDB:
          # -- Shared database URL
          url: "jdbc:mysql://localhost:3306/shared_db?useSSL=false"
          # -- Shared database username
          username: "wso2carbon"
          # -- Shared database password
          password: "wso2carbon"
          # -- JDBC pool parameters for shared database
          poolParameters:
            validationQuery: "SELECT 1"
            testOnBorrow: true
            removeAbandoned: true
            removeAbandonedTimeout: 300
            indexingFrequencyInSeconds: 10

      eventHandlers:
        - name: userPostSelfRegistration
          subscriptions:
            - POST_ADD_USER

      iskm:
        # -- Set true ISKM is used instead of Resident KM
        enabled: false
        # -- ISKM kubernetes service name if ISKM is used instead of Resident KM
        serviceName: ""
        servicePort:
      km:
        # -- SKey Manager service name
        serviceUrl: "wso2am-cp-service"
        servicePort: 9443
      
      # -- Application password of accoutn recovery webapp
      log4j2:
        # -- Console loggers that can be enabled. Allowed values are AUDIT_LOG_CONSOLE, HTTP_ACCESS_CONSOLE, TRANSACTION_CONSOLE, CORRELATION_CONSOLE
        loggers: "AUDIT_LOG_CONSOLE, HTTP_ACCESS_CONSOLE, TRANSACTION_CONSOLE, CORRELATION_CONSOLE"
        # -- Appenders that can be enabled
        appenders: ""

      oauth:
        tokenCleanup:
          # -- Token cleanup enabled
          enable: false

      resourceAccessControl:
        - context: "(.*)/fileupload/resource(.*)"
          secure: false
          httpMethod: "all"
          permissions:
        - context: "(.*)/fileupload/(.*)"
          secure: true
          httpMethod: "all"
          permissions: ["/permission/protected/"]
        - context: "(.*)/((\\.+)|(.*;+.*)|%2e)/(.*)"
          secure: true
          httpMethod: "all"
          permissions: ["/"]

      security:
        # -- Kubernetes secret name containing the keystores and truststore
        jksSecretName: ""
        keystores:
          primary:
            # -- Primary keystore enabled
            enabled: true
            # -- Primary keystore name
            name: "primary.jks"
            # -- Primary keystore alias
            alias: "wso2carbon"
            # -- Primary keystore password
            password: "wso2carbon"
            # -- Primary keystore key password
            keyPassword: "wso2carbon"
          tls:
            # -- Secondary keystore enabled
            enabled: true
            # -- Secondary keystore name
            name: "tls.jks"
            # -- Secondary keystore alias
            alias: "wso2carbon"
            # -- Secondary keystore password
            password: "wso2carbon"
            # -- Secondary keystore key password
            keyPassword: "wso2carbon"
          internal:
            # -- Internal keystore enabled
            enabled: true
            # -- Internal keystore name
            name: "internal.jks"
            # -- Internal keystore alias
            alias: "wso2carbon"
            # -- Internal keystore password
            password: "wso2carbon"
            # -- Internal keystore key password
            keyPassword: "wso2carbon"
        truststore:
          # -- Truststore name
          name: "client-truststore.jks"
          # -- Truststore password
          password: "wso2carbon"

      serviceProvider:
        spNameRegex: "^[\\sa-zA-Z0-9._-]*$"

      sessionData:
        cleanUp:
          expiredData: false
          loggedOutSessions: false
          preSessionData: false

      userStore:
        # -- User store type. 
        # https://apim.docs.wso2.com/en/latest/administer/managing-users-and-roles/managing-user-stores/configure-primary-user-store/configuring-the-primary-user-store/
        type: "database_unique_id"
        # -- User store properties
        properties:
          key: value

    # -- APIM server port offset
    portOffset: 0
    # -- Enable secure vault
    secureVaultEnabled: false

  deployment:
    am:
      image:
        # -- Registry name consisting the image
        registry: ""
        # -- Repository name consisting the image
        repository: "wso2am"
        # -- Docker image digest
        digest: ""
        # -- Image pull policy
        imagePullPolicy: Always

      resources:
        # These are the resource recommendations for running WSO2 API Management product profiles with profile optimization
        # Resource configurations defined here are applicable for all API Manager product profiles of this deployment
        requests:
          # -- Memory request for API Manager
          memory: "2Gi"
          # -- CPU request for API Manager
          cpu: "2000m"
        limits:
          # -- Memory limit for API Manager
          memory: "3Gi"
          # -- CPU limit for API Manager
          cpu: "3000m"
        jvm:
          memory:
            # -- JVM heap memory Xms
            xms: "1024m"
            # -- JVM heap memory Xmx
            xmx: "1024m"

      # -- Minimum available pod counts for PDB
      minAvailable: 1

      # Indicates whether the container is running
      livenessProbe:
        # -- Number of seconds after the container has started before liveness probes are initiated
        initialDelaySeconds: 60
        # -- How often (in seconds) to perform the probe
        periodSeconds: 10
        # -- Minimum consecutive successes for the probe to be considered successful after having failed
        failureThreshold: 3
        # Indicates whether the container is ready to service requests
      readinessProbe:
        # -- Number of seconds after the container has started before readiness probes are initiated
        initialDelaySeconds: 60
        # -- How often (in seconds) to perform the probe
        periodSeconds: 10
        # -- Minimum consecutive successes for the probe to be considered successful after having failed
        failureThreshold: 3

    # -- Persisted and shared runtime artifacts for API Manager
    # See official documentation (from https://apim.docs.wso2.com/en/latest/install-and-setup/setup/reference/common-runtime-and-configuration-artifacts/#persistent-runtime-artifacts)
    persistence:
      # Define capacities for persistent runtime artifact directories which are shared between instances of the relevant API Manager profile
      sharedArtifacts:
        capacity:
          # -- For execution plans shared between the Traffic Manager profile instances
          executionPlans: 100M
